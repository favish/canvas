{"code":"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { borders, color as colorStyles, height, maxHeight, maxWidth, minHeight, minWidth, space, typography, width } from \"styled-system\";\r\nimport { LoadingSpinner } from \"../LoadingSpinner\";\r\nconst ButtonStyle = styled.button `\noutline: 0;\npadding-left: 20px;\npadding-right: 20px;\ncolor: white;\nfont-size: 14px;\nfont-weight: 600;\nborder-style: solid;\nborder-width: 0;\nborder-radius: 3px;\ncursor: pointer;\ntransition: all 180ms ease;\n\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\nmin-width: 100px;\n\n\n&:disabled {\n  cursor: none;\n  background - color: gray;\n}\n\n${p => (p.variant === \"primary\" || !p.variant) &&\r\n    `\n      height: 40px;\n      background-color: rgb(40,40,40);\n      ${colorStyles};\n      ${minWidth};\n\n      &:hover {\n        opacity: ${p => (p.hoverBg ? p.hoverBg : \"rgb(10,10,10)\")};\n      }\n    `}\n\n${props => props.variant === \"disabled\" &&\r\n    `\n      height: 40px;\n      cursor: not-allowed;\n      background-color: rgb(230,230,230);\n      ${colorStyles};\n      ${minWidth};\n    `}\n\n${props => props.variant === \"secondary\" &&\r\n    `\n      height: 40px;\n      background-color: transparent;\n      border-color: ${props.borderColor ? props.borderColor : \"rgba(50,50,50,.2)\"};\n      border-width: ${props.borderWidth ? `${props.borderWidth}px` : \"2px\"};\n      color: ${props.color ? props.color : \"rgb(42,42,42)\"};\n      ${minWidth};\n\n      &:hover {\n        opacity: .7;\n      }\n    `}\n\n${p => p.size === \"small\" &&\r\n    `\n      font-size: 12px;\n      height: ${p.height ? p.height : \"24px\"};\n      min-width: 80px;\n      ${minWidth};\n    `}\n\n${borders};\n${colorStyles};\n${height};\n${maxHeight};\n${maxWidth};\n${minHeight};\n${minWidth};\n${space};\n${typography};\n${width};\n`;\r\nexport const Button = props => {\r\n    const { disabled, icon, iconRight, text, loading, loader, onClick, role, ...rest } = props;\r\n    const loaderNull = !loader ? React.createElement(LoadingSpinner, { color: props.color }) : loader;\r\n    return (React.createElement(React.Fragment, null, !loading ? (React.createElement(ButtonStyle, Object.assign({ onClick: onClick, type: !role ? \"button\" : role }, rest),\r\n        icon && icon,\r\n        !loading ? text : loaderNull,\r\n        iconRight && iconRight)) : (React.createElement(ButtonStyle, Object.assign({ variant: \"disabled\" }, rest), !loading ? text : loaderNull))));\r\n};\r\n//# sourceMappingURL=Button.js.map","map":"{\"version\":3,\"file\":\"Button.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/components/Button/Button.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EACL,OAAO,EAEP,KAAK,IAAI,WAAW,EAEpB,MAAM,EAEN,SAAS,EAET,QAAQ,EAER,SAAS,EAET,QAAQ,EAER,KAAK,EAEL,UAAU,EAEV,KAAK,EAEN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAiCnD,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;EAyBjD,CAAC,CAAC,EAAE,CACJ,CAAC,CAAC,CAAC,OAAO,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;IACvC;;;QAGM,WAAW;QACX,QAAQ;;;mBAGG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;;KAE5D;;EAEH,KAAK,CAAC,EAAE,CACR,KAAK,CAAC,OAAO,KAAK,UAAU;IAC5B;;;;QAIM,WAAW;QACX,QAAQ;KACX;;EAEH,KAAK,CAAC,EAAE,CACR,KAAK,CAAC,OAAO,KAAK,WAAW;IAC7B;;;sBAIM,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,mBAC1C;sBACgB,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,KAAK;eAC3D,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe;QAClD,QAAQ;;;;;KAKX;;EAEH,CAAC,CAAC,EAAE,CACJ,CAAC,CAAC,IAAI,KAAK,OAAO;IAClB;;gBAEc,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;;QAEpC,QAAQ;KACX;;EAEH,OAAO;EACP,WAAW;EACX,MAAM;EACN,SAAS;EACT,QAAQ;EACR,SAAS;EACT,QAAQ;EACR,KAAK;EACL,UAAU;EACV,KAAK;CACN,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAA0B,KAAK,CAAC,EAAE;IACnD,MAAM,EACJ,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,EACP,MAAM,EACN,OAAO,EACP,IAAI,EACJ,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IAEV,MAAM,UAAU,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAC,cAAc,IAAC,KAAK,EAAE,KAAK,CAAC,KAAK,GAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IAC7E,OAAO,CACL,0CACG,CAAC,OAAO,CAAC,CAAC,CAAC,CACV,oBAAC,WAAW,kBAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAM,IAAI;QACnE,IAAI,IAAI,IAAI;QACZ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU;QAC5B,SAAS,IAAI,SAAS,CACX,CACf,CAAC,CAAC,CAAC,CACF,oBAAC,WAAW,kBAAC,OAAO,EAAC,UAAU,IAAK,IAAI,GACrC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CACjB,CACf,CACA,CACJ,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/rsbear/projects/canvas-mono/canvas/components/Button/Button.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\nimport { BordersProps, ColorProps, HeightProps, MaxHeightProps, MaxWidthProps, MinHeightProps, MinWidthProps, SpaceProps, TypographyProps, WidthProps } from \"styled-system\";\r\nexport interface ButtonStyleProps extends BordersProps, ColorProps, HeightProps, MaxHeightProps, MaxWidthProps, MinHeightProps, MinWidthProps, SpaceProps, TypographyProps, WidthProps {\r\n    borderColor?: string;\r\n    borderWidth?: number;\r\n    color?: string;\r\n    hoverBg?: string;\r\n    size?: \"default\" | \"small\";\r\n    variant?: \"primary\" | \"secondary\" | \"disabled\";\r\n    width?: number;\r\n}\r\nexport interface ButtonProps extends ButtonStyleProps {\r\n    disabled?: boolean;\r\n    icon?: JSX.Element;\r\n    iconRight?: JSX.Element;\r\n    loading?: boolean;\r\n    loader?: JSX.Element;\r\n    onClick?: any;\r\n    role?: \"button\" | \"submit\";\r\n    text: string;\r\n}\r\nexport declare const Button: React.FC<ButtonProps>;\r\n"}}
